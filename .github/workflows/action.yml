name: iOS Simulator Test

on:
  workflow_dispatch:
    inputs:
      platform:
        description: "platform"
        required: true
        type: choice
        options:
          - android
          - ios

jobs:
  #ios
  ios_pipeline:
    if: ${{ github.event.inputs.platform == 'ios' }}
    runs-on: macos-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Xcode and iOS Simulator
        run: |
          sudo xcode-select --switch /Applications/Xcode.app

      - name: Set up Node.js
        uses: actions/setup-node@v2
        with:
          node-version: "16"

      - name: Start Appium Server
        run: |
          npm install -g appium@next
          appium driver install xcuitest

      - name: set up python
        uses: actions/setup-python@v2
        with:
          python-version: "3.x"

      - name: Cache Python packages
        uses: actions/cache@v3
        with:
          # Cache location for pip
          path: ~/.cache/pip
          # Generate a unique key based on OS, Python version, and requirements.txt
          key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
          # Use a partial key to restore similar caches if an exact match isn't found
          restore-keys: |
            ${{ runner.os }}-pip-

      - name: Install dependencies
        run: |
          pip install -r requirements.txt

      - name: Cache CoreSimulator Devices folder
        uses: actions/cache@v3
        with:
          path: ~/Library/Developer/CoreSimulator/Devices/3C9A5AE0-C05B-444F-8E40-D1A044BE388D
          key: ${{ runner.os }}-coresimulator-${{ hashFiles('**/appium-config.yml') }}
          restore-keys: |
            ${{ runner.os }}-coresimulator-

      - name: Cache WebDriverAgent DerivedData folder
        uses: actions/cache@v3
        with:
          path: /Users/runner/Library/Developer/Xcode/DerivedData/WebDriverAgent-dtmoeonrefnxsncuficthanbldlc
          key: ${{ runner.os }}-webdriveragent-${{ hashFiles('**/appium-config.yml') }}
          restore-keys: |
            ${{ runner.os }}-webdriveragent-
      # - run: ls /Users/runner/Library/Developer/Xcode/DerivedData/WebDriverAgent-dtmoeonrefnxsncuficthanbldlc/Build/Products/Debug-iphonesimulator/WebDriverAgentRunner-Runner.app
      - run: |
          appium --config ./appium-config.yml  > appium1.log 2>&1 &
          sleep 10
      - name: Run the test
        run: |
          robot testcases/ios.robot

      - name: Upload Appium log as artifact
        if: always() # Ensure this step runs regardless of previous step status
        uses: actions/upload-artifact@v3
        with:
          name: appium-artifacts
          path: |
            appium1.log
            showme.png

  android_pipeline:
    runs-on: ubuntu-latest
    if: ${{ github.event.inputs.platform == 'android' }}
    env:
      ANDROID_HOME: /usr/local/lib/android/sdk
    steps:
      - name: checkout
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v2
        with:
          node-version: "16"

      - name: Start Appium Server
        run: |
          npm install -g appium@next
          appium driver install uiautomator2

      - name: Install dependencies
        run: |
          pip install -r requirements.txt

      - name: set up python
        uses: actions/setup-python@v2
        with:
          python-version: "3.x"
      - run: |
          appium   > appium1.log 2>&1 &

      - name: Enable KVM
        run: |
          echo 'KERNEL=="kvm", GROUP="kvm", MODE="0666", OPTIONS+="static_node=kvm"' | sudo tee /etc/udev/rules.d/99-kvm4all.rules
          sudo udevadm control --reload-rules
          sudo udevadm trigger --name-match=kvm

      - name: run tests
        uses: reactivecircus/android-emulator-runner@v2
        with:
          api-level: 30
          target: google_apis
          arch: x86_64
          profile: Nexus 6
          script: |
            robot testcases/andriod.robot

      - name: Upload Appium log as artifact
        if: always() # Ensure this step runs regardless of previous step status
        uses: actions/upload-artifact@v3
        with:
          name: appium-artifacts
          path: |
            appium1.log
            showme.png


              #android

########
# Not using reactivecircus/android-emulator-runner@v2 method
# run-android-emulator-tests:
#   runs-on: ubuntu-latest

#   env:
#     ANDROID_HOME: /usr/local/lib/android/sdk
#     JAVA_HOME: /usr/lib/jvm/java-17-openjdk-amd64

#   steps:
#     - name: Checkout code
#       uses: actions/checkout@v2
#     # Set up Java
#     - name: Set up Java
#       uses: actions/setup-java@v4
#       with:
#         java-version: "17"
#         distribution: "temurin"

#     - name: Setup Android SDK
#       uses: android-actions/setup-android@v3
#     - run: $ANDROID_HOME/cmdline-tools/latest/bin/sdkmanager --list_installed
#     - run: $ANDROID_HOME/cmdline-tools/latest/bin/sdkmanager --list
#     - run: adb devices
#     - run: $ANDROID_HOME/cmdline-tools/latest/bin/avdmanager list avd
#     - run: $ANDROID_HOME/cmdline-tools/latest/bin/sdkmanager --install "system-images;android-30;google_apis_playstore;x86"
#     - run: ls $ANDROID_HOME/system-images/android-30/google_apis_playstore/
